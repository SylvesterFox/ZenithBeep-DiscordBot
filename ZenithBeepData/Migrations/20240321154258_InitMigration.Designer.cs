// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ZenithBeepData.Context;

#nullable disable

namespace ZenithBeepData.Migrations
{
    [DbContext(typeof(BeepDbContext))]
    [Migration("20240321154258_InitMigration")]
    partial class InitMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ZenithBeepData.Models.ModelArchivedTrack", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("CachedUserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("DateMessageCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<TimeSpan>("Length")
                        .HasColumnType("interval");

                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("Position")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("RequestedById")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TrackString")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CachedUserId");

                    b.HasIndex("GuildId");

                    b.ToTable("ArchivedTracks", (string)null);
                });

            modelBuilder.Entity("ZenithBeepData.Models.ModelCachedUser", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("ModelGuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ModelGuildId");

                    b.ToTable("CachedUser", (string)null);
                });

            modelBuilder.Entity("ZenithBeepData.Models.ModelGuild", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("CurrentTrack")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("IsPlaying")
                        .HasColumnType("boolean");

                    b.Property<string>("Lang")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("LastMessageStatusId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("LeaveAfterQueue")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("MusicChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("MusicChannelName")
                        .HasColumnType("text");

                    b.Property<decimal>("NextTrack")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("TrackCount")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("guildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("guildName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Guild", (string)null);
                });

            modelBuilder.Entity("ZenithBeepData.Models.ModelGuildQueueItem", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("DeletedById")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("DeletedReason")
                        .HasColumnType("text");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<TimeSpan>("Length")
                        .HasColumnType("interval");

                    b.Property<decimal?>("PlaylistId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("Position")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("RequestedById")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TrackString")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DeletedById");

                    b.HasIndex("GuildId");

                    b.HasIndex("PlaylistId");

                    b.HasIndex("RequestedById");

                    b.ToTable("GuildQueueItems", (string)null);
                });

            modelBuilder.Entity("ZenithBeepData.Models.ModelGuildQueuePlaylist", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("CreatedById")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("PlaylistSongConut")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("GuildQueuePlaylists");
                });

            modelBuilder.Entity("ZenithBeepData.Models.ModelRoles", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("channelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("messageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("roleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("setEmoji")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ZenithBeepData.Models.ModelRooms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("channel_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("limit")
                        .HasColumnType("integer");

                    b.Property<decimal>("owner_channel")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("ZenithBeepData.Models.ModelRoomsLobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("lobby_id")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("RoomsLobbys");
                });

            modelBuilder.Entity("ZenithBeepData.Models.ModelTempRoom", b =>
                {
                    b.Property<decimal>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("channelRoomId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("userId");

                    b.ToTable("TempRooms");
                });

            modelBuilder.Entity("ZenithBeepData.Models.ModelArchivedTrack", b =>
                {
                    b.HasOne("ZenithBeepData.Models.ModelCachedUser", "CachedUser")
                        .WithMany("ArchivedTracks")
                        .HasForeignKey("CachedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZenithBeepData.Models.ModelGuild", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CachedUser");

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("ZenithBeepData.Models.ModelCachedUser", b =>
                {
                    b.HasOne("ZenithBeepData.Models.ModelGuild", "ModelGuild")
                        .WithMany()
                        .HasForeignKey("ModelGuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModelGuild");
                });

            modelBuilder.Entity("ZenithBeepData.Models.ModelGuildQueueItem", b =>
                {
                    b.HasOne("ZenithBeepData.Models.ModelCachedUser", "DeleteBy")
                        .WithMany("DeletedSong")
                        .HasForeignKey("DeletedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ZenithBeepData.Models.ModelGuild", "Guild")
                        .WithMany("Tracks")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZenithBeepData.Models.ModelGuildQueuePlaylist", "Playlist")
                        .WithMany("Songs")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ZenithBeepData.Models.ModelCachedUser", "RequestedBy")
                        .WithMany("RequestedSongs")
                        .HasForeignKey("RequestedById")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("DeleteBy");

                    b.Navigation("Guild");

                    b.Navigation("Playlist");

                    b.Navigation("RequestedBy");
                });

            modelBuilder.Entity("ZenithBeepData.Models.ModelGuildQueuePlaylist", b =>
                {
                    b.HasOne("ZenithBeepData.Models.ModelCachedUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("ZenithBeepData.Models.ModelRoles", b =>
                {
                    b.HasOne("ZenithBeepData.Models.ModelGuild", "Guild")
                        .WithMany("Roles")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("ZenithBeepData.Models.ModelRoomsLobby", b =>
                {
                    b.HasOne("ZenithBeepData.Models.ModelGuild", "Guild")
                        .WithMany("Lobbys")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("ZenithBeepData.Models.ModelCachedUser", b =>
                {
                    b.Navigation("ArchivedTracks");

                    b.Navigation("DeletedSong");

                    b.Navigation("RequestedSongs");
                });

            modelBuilder.Entity("ZenithBeepData.Models.ModelGuild", b =>
                {
                    b.Navigation("Lobbys");

                    b.Navigation("Roles");

                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("ZenithBeepData.Models.ModelGuildQueuePlaylist", b =>
                {
                    b.Navigation("Songs");
                });
#pragma warning restore 612, 618
        }
    }
}
